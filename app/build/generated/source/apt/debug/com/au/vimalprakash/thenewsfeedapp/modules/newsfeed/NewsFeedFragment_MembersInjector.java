// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.au.vimalprakash.thenewsfeedapp.modules.newsfeed;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class NewsFeedFragment_MembersInjector implements MembersInjector<NewsFeedFragment> {
  private final Provider<NewsFeedContract.Presenter> mPresenterProvider;

  public NewsFeedFragment_MembersInjector(Provider<NewsFeedContract.Presenter> mPresenterProvider) {
    assert mPresenterProvider != null;
    this.mPresenterProvider = mPresenterProvider;
  }

  public static MembersInjector<NewsFeedFragment> create(
      Provider<NewsFeedContract.Presenter> mPresenterProvider) {
    return new NewsFeedFragment_MembersInjector(mPresenterProvider);
  }

  @Override
  public void injectMembers(NewsFeedFragment instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.mPresenter = mPresenterProvider.get();
  }

  public static void injectMPresenter(
      NewsFeedFragment instance, Provider<NewsFeedContract.Presenter> mPresenterProvider) {
    instance.mPresenter = mPresenterProvider.get();
  }
}
